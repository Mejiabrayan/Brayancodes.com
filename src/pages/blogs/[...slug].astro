---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '~/layouts/Layout.astro';
import Container from '~/components/container.astro';
import { Image } from 'astro:assets';
import { ViewTransitions } from 'astro:transitions';

export async function getStaticPaths() {
  const blogPosts = await getCollection('blogs', ({ id }: any) => {
    return id.endsWith('.md') || id.endsWith('.mdx');
  });

  return blogPosts.map((blog: any) => ({
    params: { slug: blog.slug },
    props: { blog },
  }));
}

interface Props {
  blog: CollectionEntry<'blogs'>;
}

const { blog } = Astro.props;
const { Content } = await blog.render();
const { title, description, date, image } = blog.data;
---

<Layout title={`${title} | Brayan M. Cuenca Blog`}>
  <ViewTransitions />
  <Container>
    <article class='max-w-3xl mx-auto'>
      <!-- Header -->
      <header class='text-center space-y-4 mb-12'>
        <h1 class='text-4xl font-[Tobias] italic text-neutral-300'>{title}</h1>
        <p class='text-lg text-neutral-300/90'>{description}</p>
        <time class='block text-sm text-neutral-300/70 font-mono'>
          {
            new Date(date).toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })
          }
        </time>
      </header>

      {
        image && (
          <div class='reflection-wrapper'>
            <!-- Original Image -->
            <div class='relative isolate aspect-video w-full rounded-lg overflow-hidden'>
              <Image
                src={image}
                alt={title}
                width={1000}
                height={1000}
                class='w-full h-full object-cover'
                loading='lazy'
              />
            </div>

            <!-- Reflection -->
            <div class='relative isolate aspect-video w-full overflow-hidden reflection'>
              <Image
                src={image}
                alt={`${title} reflection`}
                width={1000}
                height={1000}
                class='w-full h-[75%] object-cover'
                loading='lazy'
              />
            </div>
          </div>
        )
      }

      <!-- Content -->
      <div
        class='prose prose-neutral prose-invert max-w-none leading-normal mt-12
        prose-headings:font-[Tobias] prose-headings:italic
        prose-h1:text-neutral-300 prose-h1:text-2xl 
        prose-h2:text-neutral-300 prose-h2:text-xl
        prose-h3:text-neutral-300 prose-h3:text-lg
        prose-p:text-neutral-300
        prose-a:text-white prose-a:no-underline hover:prose-a:text-neutral-200
        prose-strong:text-white
        prose-code:rounded-sm prose-code:border prose-code:border-white/10
        prose-code:bg-neutral-800/50 prose-code:px-1
        prose-ul:text-neutral-300'
      >
        <Content />
      </div>
    </article>
  </Container>
</Layout>

<style>
  .reflection-wrapper {
    position: relative;
    padding-bottom: 15px;
  }

  .reflection {
    transform: rotateX(180deg) translateY(20%);
    mask-image: linear-gradient(transparent 40%, white 90%);
    -webkit-mask-image: linear-gradient(transparent 40%, white 90%);
    opacity: 0.5;
    filter: blur(1.5px) brightness(1.5);
  }
</style>
