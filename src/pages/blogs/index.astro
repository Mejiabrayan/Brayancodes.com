---
import Layout from '~/layouts/Layout.astro';
import Container from '~/components/container.astro';
import Badge from '~/components/ui/badge.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';

type Blog = CollectionEntry<'blogs'>;

const posts: Blog[] = (
  await getCollection('blogs', ({ id }: any) => {
    return id.endsWith('.md') || id.endsWith('.mdx');
  })
).sort((a: Blog, b: Blog) => b.data.date.valueOf() - a.data.date.valueOf());

const formatDate = (date: Date): string => {
  return new Date(date).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
  });
};
---

<Layout title='Blog Posts | Brayan M. Cuenca'>
  <div class='relative max-w-sm md:max-w-2xl lg:max-w-3xl mx-auto px-4'>
    <header class='text-center mb-20'>
      <h1
        class='text-4xl font-[Tobias] italic text-neutral-300'
        transition:name='blog'
        transition:animate='slide'
      >
        Blogs
      </h1>
      <p class='text-neutral-300/90 mt-2'>
        Thoughts, ideas, and learnings from my journey in software development.
      </p>
    </header>

    <div class='relative pb-20'>
      <div
        id='slider'
        class='flex overflow-x-auto snap-x snap-mandatory scrollbar-none scroll-smooth'
        style='scroll-padding: 0 1rem; view-timeline-name: --slider; view-timeline-axis: inline;'
      >
        {
          posts.map((post: Blog) => (
            <a
              href={`/blogs/${post.slug}`}
              class='block flex-none w-[300px] snap-start px-2 project-card group'
              style='view-timeline-name: --reveal; view-timeline-axis: inline;'
            >
              <div class="relative">
                <Image
                  src={post.data.image}
                  alt={post.data.title}
                  width={300}
                  height={300}
                  quality={100}
                  class='rounded-lg w-full h-[300px] object-cover image-reveal group-hover:scale-105 transition-transform duration-500'
                />
                <div class="mt-4 space-y-1">
                  <h2 class='text-lg font-[Tobias] italic text-neutral-300 title-reveal group-hover:text-white transition-colors'>
                    {post.data.title}
                  </h2>
                  <time class='text-sm text-neutral-300/70 font-mono title-reveal'>
                    {formatDate(post.data.date)}
                  </time>
                  {post.data.tags && (
                    <div class='flex items-center gap-x-2 flex-wrap title-reveal'>
                      {post.data.tags.map((tag: string) => (
                        <Badge text={tag} />
                      ))}
                    </div>
                  )}
                  <p class="text-sm text-neutral-300/90 line-clamp-2 title-reveal">
                    {post.data.description}
                  </p>
                </div>
              </div>
            </a>
          ))
        }
      </div>
    </div>
  </div>
</Layout>
